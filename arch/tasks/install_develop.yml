- name: Instalar ferramentas de desenvolvimento com yay
  become: false
  block:
  - name: Verificar se o VSCode já está instalado
    command: pacman -Qi visual-studio-code-bin
    register: vscode_check
    failed_when: false
    changed_when: false

  - name: Instalar o VSCode via yay se não estiver instalado
    command: yay -S --noconfirm visual-studio-code-bin
    when: vscode_check.rc != 0
    register: vscode_install
    failed_when: vscode_install.rc != 0

  - name: Verificar se o VSCode foi instalado corretamente
    command: code --version
    register: vscode_version
    changed_when: false
    failed_when: vscode_version.rc != 0

  - name: Exibir versão do VSCode
    debug:
      msg: "VSCode foi instalado, versão: {{ vscode_version.stdout }}"

  - name: Verificar se a AWS CLI v2 já está instalada
    command: pacman -Qi aws-cli-v2
    register: awscli_check
    failed_when: false
    changed_when: false

  - name: Instalar a AWS CLI v2 via yay se não estiver instalada
    command: yay -S --noconfirm aws-cli-v2
    when: awscli_check.rc != 0
    register: awscli_install
    failed_when: awscli_install.rc != 0

  - name: Verificar se a AWS CLI v2 foi instalada corretamente
    command: aws --version
    register: awscli_version
    changed_when: false
    failed_when: awscli_version.rc != 0

  - name: Exibir versão da AWS CLI
    debug:
      msg: "AWS CLI v2 foi instalada, versão: {{ awscli_version.stdout }}"

  - name: Verificar se o DBeaver já está instalado
    command: pacman -Qi dbeaver
    register: dbeaver_check
    failed_when: false
    changed_when: false

  - name: Instalar o DBeaver via yay se não estiver instalado
    command: yay -S --noconfirm dbeaver
    when: dbeaver_check.rc != 0
    register: dbeaver_install
    failed_when: dbeaver_install.rc != 0

  - name: Verificar se o DBeaver foi instalado corretamente
    command: dbeaver --version
    register: dbeaver_version
    changed_when: false
    failed_when: dbeaver_version.rc != 0

  - name: Exibir versão do DBeaver
    debug:
      msg: "DBeaver foi instalado, versão: {{ dbeaver_version.stdout }}"

  - name: Verificar se o Node.js já está instalado
    command: pacman -Qi nodejs
    register: nodejs_check
    failed_when: false
    changed_when: false

  - name: Instalar o Node.js via yay se não estiver instalado
    command: yay -S --noconfirm nodejs
    when: nodejs_check.rc != 0
    register: nodejs_install
    failed_when: nodejs_install.rc != 0

  - name: Verificar se o Node.js foi instalado corretamente
    command: node --version
    register: nodejs_version
    changed_when: false
    failed_when: nodejs_version.rc != 0

  - name: Exibir versão do Node.js
    debug:
      msg: "Node.js foi instalado, versão: {{ nodejs_version.stdout }}"

  - name: Verificar se o NPM já está instalado
    command: pacman -Qi npm
    register: npm_check
    failed_when: false
    changed_when: false

  - name: Instalar o NPM via yay se não estiver instalado
    command: yay -S --noconfirm npm
    when: npm_check.rc != 0
    register: npm_install
    failed_when: npm_install.rc != 0

  - name: Verificar se o NPM foi instalado corretamente
    command: npm --version
    register: npm_version
    changed_when: false
    failed_when: npm_version.rc != 0

  - name: Exibir versão do NPM
    debug:
      msg: "NPM foi instalado, versão: {{ npm_version.stdout }}"

  - name: Verificar se o Go já está instalado
    command: pacman -Qi go
    register: go_check
    failed_when: false
    changed_when: false

  - name: Instalar o Go via yay se não estiver instalado
    command: yay -S --noconfirm go
    when: go_check.rc != 0
    register: go_install
    failed_when: go_install.rc != 0

  - name: Verificar se o Go foi instalado corretamente
    command: go version
    register: go_version
    changed_when: false
    failed_when: go_version.rc != 0

  - name: Exibir versão do Go
    debug:
      msg: "Go foi instalado, versão: {{ go_version.stdout }}"

  - name: Verificar se o Cargo já está instalado
    command: pacman -Qi cargo
    register: cargo_check
    failed_when: false
    changed_when: false

  - name: Instalar o Cargo via yay se não estiver instalado
    command: yay -S --noconfirm cargo
    when: cargo_check.rc != 0
    register: cargo_install
    failed_when: cargo_install.rc != 0

  - name: Verificar se o Cargo foi instalado corretamente
    command: cargo --version
    register: cargo_version
    changed_when: false
    failed_when: cargo_version.rc != 0

  - name: Exibir versão do Cargo
    debug:
      msg: "Cargo foi instalado, versão: {{ cargo_version.stdout }}"

  - name: Verificar se o Postman já está instalado
    command: pacman -Qi postman
    register: postman_check
    failed_when: false
    changed_when: false

  - name: Instalar o Postman via yay se não estiver instalado
    command: yay -S --noconfirm postman
    when: postman_check.rc != 0
    register: postman_install
    failed_when: postman_install.rc != 0

  rescue:
  - name: Exibir erro caso algo falhe
    debug:
      msg: "Ocorreu um erro ao tentar instalar as ferramentas de desenvolvimento."

  always:
  - name: Limpar após falha ou sucesso
    file:
      path: /tmp/develop_install
      state: absent
